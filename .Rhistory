dplyr::select_if(grepl("wk6", colnames(SV_table))) %>%
Make.CLR() %>% as.data.frame %>%
select_if(grepl("SPFized|Humanized", colnames(.)))
SV_table %>% as.data.frame %>%
dplyr::select_if(grepl("wk6", colnames(SV_table))) %>%
as.data.frame %>%
select_if(grepl("SPFized|Humanized", colnames(.))) %>%
aldex(., aldex.conds)
dplyr::select_if(grepl("wk6", colnames(SV_table))) %>%
as.data.frame %>%
select_if(grepl("SPFized|Humanized", colnames(.))) %>%
aldex(., aldex.conds)
aldex.res <- SV_table %>% as.data.frame %>%
dplyr::select_if(grepl("wk6", colnames(SV_table))) %>%
as.data.frame %>%
select_if(grepl("SPFized|Humanized", colnames(.))) %>%
aldex(., aldex.conds)
alex.res
aldex.res
dim(aldex.res)
aldex.res %>% filter(wi.eBH < 0.1) %>% dim
sig.SVs <- aldex.res %>% filter(wi.eBH < 0.1) %>% as.data.frame() %>% rownames_to_column("SV_ID") %>% pull(SV_ID)
## plot tree with heatmap
SV_tree%>%
treeio::tree_subset(node = sig.SVs)
## plot tree with heatmap
SV_tree%>%
treeio::tree_subset(node = sig.SVs) %>%
ggtree(layout = "rectangular") %<+% SV_information +
geom_tippoint(aes(fill = Phylum), stroke = 0.5, shape = 21, alpha = 0.8) +
theme(legend.position="right")
load("WorkingFiles.Rdata")
SV_tree <- SV_tree%>% drop.tip(SV_tree$tip.label[!SV_tree$tip.label %in% SV_information$SV_ID])
library(treeio)
SV_tree <- SV_tree%>% drop.tip(SV_tree$tip.label[!SV_tree$tip.label %in% SV_information$SV_ID])
## plot tree with heatmap
SV_tree%>%
treeio::tree_subset(node = sig.SVs) %>%
ggtree(layout = "rectangular") %<+% SV_information +
geom_tippoint(aes(fill = Phylum), stroke = 0.5, shape = 21, alpha = 0.8) +
theme(legend.position="right")
## plot tree with heatmap
SV_tree%>%
drop.tip(!sig.SVs) %>%
ggtree(layout = "rectangular") %<+% SV_information +
geom_tippoint(aes(fill = Phylum), stroke = 0.5, shape = 21, alpha = 0.8) +
theme(legend.position="right")
## plot tree with heatmap
SV_tree%>%
drop.tip(SV_tree$tip.label[!SV_tree$tip.label %in% sig.SVs])%>%
ggtree(layout = "rectangular") %<+% SV_information +
geom_tippoint(aes(fill = Phylum), stroke = 0.5, shape = 21, alpha = 0.8) +
theme(legend.position="right")
SV_tree%>%
drop.tip(SV_tree$tip.label[!SV_tree$tip.label %in% sig.SVs])
SV_tree$tip.label[!SV_tree$tip.label %in% sig.SVs]
SV_tree$tip.label %in% sig.SVs
sig.SVs
aldex.res %>% filter(wi.eBH < 0.1) %>% as.data.frame() %>% rownames_to_column("SV_ID")
aldex.res %>%
as.data.frame() %>%
rownames_to_column("SV_ID") %>%
filter(wi.eBH < 0.1)
%>% pull(SV_ID)
aldex.res %>%
as.data.frame() %>%
rownames_to_column("SV_ID") %>%
filter(wi.eBH < 0.1)%>%
pull(SV_ID)
sig.SVs <- aldex.res %>%
as.data.frame() %>%
rownames_to_column("SV_ID") %>%
filter(wi.eBH < 0.1)%>%
pull(SV_ID)
## plot tree with heatmap
SV_tree%>%
drop.tip(SV_tree$tip.label[!SV_tree$tip.label %in% sig.SVs])%>%
ggtree(layout = "rectangular") %<+% SV_information +
geom_tippoint(aes(fill = Phylum), stroke = 0.5, shape = 21, alpha = 0.8) +
theme(legend.position="right")
small.HM <- tmp.filtered %>% rownames_to_column("SV_ID") %>%
filter(!SV_ID %in% sig.SVs) %>%
column_to_rownames("SV_ID")
p2 <- gheatmap(p1, small.HM, colnames = F)+ scale_fill_viridis_c()
df = get_heatmap_column_position(p2, by="bottom")
p2+geom_text(data=df, aes(x, y, label=label), angle=25, vjust = 3, size = 2)
p1 <- SV_tree%>%
drop.tip(SV_tree$tip.label[!SV_tree$tip.label %in% sig.SVs])%>%
ggtree(layout = "rectangular") %<+% SV_information +
geom_tippoint(aes(fill = Phylum), stroke = 0.5, shape = 21, alpha = 0.8) +
theme(legend.position="right")
small.HM <- tmp.filtered %>% rownames_to_column("SV_ID") %>%
filter(!SV_ID %in% sig.SVs) %>%
column_to_rownames("SV_ID")
p2 <- gheatmap(p1, small.HM, colnames = F)+ scale_fill_viridis_c()
df = get_heatmap_column_position(p2, by="bottom")
p2+geom_text(data=df, aes(x, y, label=label), angle=25, vjust = 3, size = 2)
p1 <- SV_tree%>%
drop.tip(SV_tree$tip.label[!SV_tree$tip.label %in% sig.SVs])%>%
ggtree(layout = "rectangular") %<+% SV_information +
geom_tippoint(aes(col = Phylum), stroke = 0.5, shape = 21, alpha = 0.8) +
theme(legend.position="right")
small.HM <- tmp.filtered %>% rownames_to_column("SV_ID") %>%
filter(!SV_ID %in% sig.SVs) %>%
column_to_rownames("SV_ID")
p2 <- gheatmap(p1, small.HM, colnames = F)+ scale_fill_viridis_c()
df = get_heatmap_column_position(p2, by="bottom")
p2+geom_text(data=df, aes(x, y, label=label), angle=25, vjust = 3, size = 2)
dim(small.HM)
length(sig.SVs)
small.HM <- tmp.filtered %>% rownames_to_column("SV_ID") %>%
filter(SV_ID %in% sig.SVs) %>%
column_to_rownames("SV_ID")
p2 <- gheatmap(p1, small.HM, colnames = F)+ scale_fill_viridis_c()
df = get_heatmap_column_position(p2, by="bottom")
p2+geom_text(data=df, aes(x, y, label=label), angle=25, vjust = 3, size = 2)
p1 <- SV_tree%>%
drop.tip(SV_tree$tip.label[!SV_tree$tip.label %in% sig.SVs])%>%
ggtree(layout = "rectangular") %<+% SV_information +
geom_tippoint(aes(col = Phylum), stroke = 0.5, shape = 16, alpha = 0.8) +
theme(legend.position="right")
small.HM <- tmp.filtered %>% rownames_to_column("SV_ID") %>%
filter(SV_ID %in% sig.SVs) %>%
column_to_rownames("SV_ID")
p2 <- gheatmap(p1, small.HM, colnames = F)+ scale_fill_viridis_c()
p2+geom_text(data=df, aes(x, y, label=label), angle=25, vjust = 3, size = 2)
small.HM <- tmp.filtered %>% rownames_to_column("SV_ID") %>%
select(SV_ID, SPFized, Humanized) %>%
filter(SV_ID %in% sig.SVs) %>%
column_to_rownames("SV_ID")
p2 <- gheatmap(p1, small.HM, colnames = F)+ scale_fill_viridis_c()
df = get_heatmap_column_position(p2, by="bottom")
p2+geom_text(data=df, aes(x, y, label=label), angle=25, vjust = 3, size = 2)
p2+geom_text(data=df, aes(x, y, label=label), angle=25, vjust = 3, size = 2)+ ylim(-10, 300)
p2+geom_text(data=df, aes(x, y, label=label), angle=25, vjust = 3, size = 2)+ ylim(-10, 200)
p2+geom_text(data=df, aes(x, y, label=label), angle=25, vjust = 3, size = 2)+ ylim(-10, 210)
dim(small.HM)
library(viridis)
p1 <- SV_tree%>%
drop.tip(SV_tree$tip.label[!SV_tree$tip.label %in% sig.SVs])%>%
ggtree(layout = "rectangular") %<+% SV_information +
geom_tippoint(aes(col = Phylum), stroke = 0.5, shape = 16, alpha = 0.8) +
theme(legend.position="right")
small.HM <- tmp.filtered %>% rownames_to_column("SV_ID") %>%
select(SV_ID, SPFized, Humanized) %>%
filter(SV_ID %in% sig.SVs) %>%
column_to_rownames("SV_ID")
p2 <- gheatmap(p1, small.HM, colnames = F)+ scale_fill_viridis_c()
df = get_heatmap_column_position(p2, by="bottom")
p2+geom_text(data=df, aes(x, y, label=label), angle=25, vjust = 3, size = 2)+ ylim(-10, 210)
SV_tree%>%
drop.tip(SV_tree$tip.label[!SV_tree$tip.label %in% sig.SVs])%>%
ggtree(layout = "rectangular") %<+% SV_information +
geom_tippoint(aes(col = Phylum), stroke = 0.5, shape = 16, alpha = 0.8) +
theme(legend.position="right")+
geom_text2(aes(subset=!isTip, label=node), hjust=-.3)
?gzoom
head(SV_information)
p1+gzoom(focus = SV_information %>% filter(SV_ID %in% sig.SVs & Phylum == "Bacteroidetes")
)
p1+gzoom(focus = SV_information %>% filter(SV_ID %in% sig.SVs & Phylum == "Bacteroidetes"))
SV_tree%>%
drop.tip(SV_tree$tip.label[!SV_tree$tip.label %in% sig.SVs])%>%gzoom(focus = SV_information %>% filter(SV_ID %in% sig.SVs & Phylum == "Bacteroidetes"))
?viewClade
p1 + viewClade(node = 211)
viewClade(p1, node = 211)
viewClade(p1+tiplab(), node = 211)
viewClade(p1+
geom_tiplab(aes(label=paste0('italic(', Genus, ')~bolditalic(', Species, ')~', geo)), parse=T), node = 211)
viewClade(p1+
geom_tiplab(aes(label=paste0('italic(', Genus, ')~bolditalic(', Species, ')~')), parse=T), node = 211)
viewClade(p1+
geom_tiplab(aes(label=paste0(Genus, Species)), parse=T), node = 211)
p1+
geom_tiplab(aes(label=paste0(Genus, Species))
, parse=T)
geom_tiplab(aes(label=paste0(Genus, Species)), node = 211)
SV_tree%>%
drop.tip(SV_tree$tip.label[!SV_tree$tip.label %in% sig.SVs])%>%
ggtree(layout = "rectangular") %<+% SV_information +
geom_tippoint(aes(col = Phylum), stroke = 0.5, shape = 16, alpha = 0.8) +
theme(legend.position="right")
geom_tiplab(aes(label=paste0(Genus, Species))
SV_tree%>%
SV_tree%>%
drop.tip(SV_tree$tip.label[!SV_tree$tip.label %in% sig.SVs])%>%
ggtree(layout = "rectangular") %<+% SV_information +
geom_tippoint(aes(col = Phylum), stroke = 0.5, shape = 16, alpha = 0.8) +
theme(legend.position="right")+
geom_tiplab(aes(label=paste0(Genus, Species)))
SV_tree%>%
drop.tip(SV_tree$tip.label[!SV_tree$tip.label %in% sig.SVs])%>%
ggtree(layout = "rectangular") %<+% SV_information +
geom_tippoint(aes(col = Phylum), stroke = 0.5, shape = 16, alpha = 0.8) +
theme(legend.position="right")+
geom_tiplab(aes(label=paste0(Genus, Species), parse = T))
p1 <- SV_tree%>%
drop.tip(SV_tree$tip.label[!SV_tree$tip.label %in% sig.SVs])%>%
ggtree(layout = "rectangular") %<+% SV_information +
geom_tippoint(aes(col = Phylum), stroke = 0.5, shape = 16, alpha = 0.8) +
theme(legend.position="right")+
geom_tiplab(aes(label=paste0(Genus, Species), parse = T))
viewClade(p1,node = 211)
p1 <- SV_tree%>%
drop.tip(SV_tree$tip.label[!SV_tree$tip.label %in% sig.SVs])%>%
ggtree(layout = "rectangular") %<+% SV_information +
geom_tippoint(aes(col = Phylum), stroke = 0.5, shape = 16, alpha = 0.8) +
theme(legend.position="right")+
geom_tiplab(aes(label=paste0(Family, " ", Genus, " ", Species), parse = T))
viewClade(p1,node = 211)
p1 <- SV_tree%>%
drop.tip(SV_tree$tip.label[!SV_tree$tip.label %in% sig.SVs])%>%
ggtree(layout = "rectangular") %<+% SV_information +
geom_tippoint(aes(col = Phylum), stroke = 0.5, shape = 16, alpha = 0.8) +
theme(legend.position="right")+
geom_tiplab(aes(label=paste0(Family, " ", Genus, " ", Species), parse = T))+
geom_text2(aes(subset=!isTip, label=node), hjust=-.3)
viewClade(p1,node = 211)
p1 <- SV_tree%>%
drop.tip(SV_tree$tip.label[!SV_tree$tip.label %in% sig.SVs])%>%
ggtree(layout = "rectangular") %<+% SV_information +
geom_tippoint(aes(col = Phylum), stroke = 0.5, shape = 16, alpha = 0.8) +
theme(legend.position="right")+
geom_tiplab(aes(label=paste0(Family, " ", Genus, " ", Species), parse = T))+
geom_text2(aes(subset=!isTip, label=node), size = 4, hjust=-.3)
viewClade(p1,node = 211)
p1 <- SV_tree%>%
drop.tip(SV_tree$tip.label[!SV_tree$tip.label %in% sig.SVs])%>%
ggtree(layout = "rectangular") %<+% SV_information +
geom_tippoint(aes(col = Phylum), stroke = 0.5, shape = 16, alpha = 0.8) +
theme(legend.position="right")+
geom_tiplab(aes(label=paste0(Family, " ", Genus, " ", Species), parse = T))+
geom_text2(aes(subset=!isTip, label=node), size = 3, hjust=-.3)
viewClade(p1,node = 211)
p1 <- SV_tree%>%
drop.tip(SV_tree$tip.label[!SV_tree$tip.label %in% sig.SVs])%>%
ggtree(layout = "rectangular") %<+% SV_information +
geom_tippoint(aes(col = Phylum), stroke = 0.5, shape = 16, alpha = 0.8) +
theme(legend.position="right")+
geom_tiplab(aes(label=paste0(Family, " ", Genus, " ", Species), parse = T))+
geom_text2(aes(subset=!isTip, label=node), size = 1, hjust=-.3)
viewClade(p1,node = 211)
p1 <- SV_tree%>%
drop.tip(SV_tree$tip.label[!SV_tree$tip.label %in% sig.SVs])%>%
ggtree(layout = "rectangular") %<+% SV_information +
geom_tippoint(aes(col = Phylum), stroke = 0.5, shape = 16, alpha = 0.8) +
theme(legend.position="right")+
geom_tiplab(aes(label=paste0(Family, " ", Genus, " ", Species), parse = T))+
geom_text2(aes(subset=!isTip, label=node), hjust=-.3)+
theme(text = element_text(size = 4))
viewClade(p1,node = 211)
p1 <- SV_tree%>%
drop.tip(SV_tree$tip.label[!SV_tree$tip.label %in% sig.SVs])%>%
ggtree(layout = "rectangular") %<+% SV_information +
geom_tippoint(aes(col = Phylum), stroke = 0.5, shape = 16, alpha = 0.8) +
theme(legend.position="right")+
geom_tiplab(aes(label=paste0(Family, " ", Genus, " ", Species), parse = T))+
geom_text2(aes(subset=!isTip, label=node), hjust=-.3)+
theme(text = element_text(size = 1))
viewClade(p1,node = 211)
p1 <- SV_tree%>%
drop.tip(SV_tree$tip.label[!SV_tree$tip.label %in% sig.SVs])%>%
ggtree(layout = "rectangular") %<+% SV_information +
geom_tippoint(aes(col = Phylum), stroke = 0.5, shape = 16, alpha = 0.8) +
theme(legend.position="right")+
geom_tiplab(aes(label=paste0(Family, " ", Genus, " ", Species), parse = T))+
geom_text2(aes(subset=!isTip, label=node), hjust=-.3)+
theme(text = element_text(size = 0.5))
viewClade(p1,node = 211)
p1 <- SV_tree%>%
drop.tip(SV_tree$tip.label[!SV_tree$tip.label %in% sig.SVs])%>%
ggtree(layout = "rectangular") %<+% SV_information +
geom_tippoint(aes(col = Phylum), stroke = 0.5, shape = 16, alpha = 0.8) +
theme(legend.position="right")+
geom_tiplab(aes(label=paste0(Family, " ", Genus, " ", Species), parse = T))+
geom_text2(aes(subset=!isTip, label=node), hjust=-.3)+
theme(text = element_text(size = 10))
viewClade(p1,node = 211)
p1 <- SV_tree%>%
drop.tip(SV_tree$tip.label[!SV_tree$tip.label %in% sig.SVs])%>%
ggtree(layout = "rectangular") %<+% SV_information +
geom_tippoint(aes(col = Phylum), stroke = 0.5, shape = 16, alpha = 0.8) +
theme(legend.position="right")+
geom_tiplab(aes(label=paste0(Family, " ", Genus, " ", Species), parse = T))+
geom_text2(aes(subset=!isTip, label=node), hjust=-.3)+
theme(text = element_text(size = 6))
viewClade(p1,node = 211)
p1 <- SV_tree%>%
drop.tip(SV_tree$tip.label[!SV_tree$tip.label %in% sig.SVs])%>%
ggtree(layout = "rectangular") %<+% SV_information +
geom_tippoint(aes(col = Phylum), stroke = 0.5, shape = 16, alpha = 0.8) +
theme(legend.position="right")+
geom_tiplab(aes(label=paste0(Family, " ", Genus, " ", Species), parse = T))+
geom_text2(aes(subset=!isTip, label=node), hjust=-.3)+
theme(text = element_text(size = 5))
viewClade(p1,node = 211)
?geom_text2
p1 <- SV_tree%>%
drop.tip(SV_tree$tip.label[!SV_tree$tip.label %in% sig.SVs])%>%
ggtree(layout = "rectangular") %<+% SV_information +
geom_tippoint(aes(col = Phylum), stroke = 0.5, shape = 16, alpha = 0.8) +
theme(legend.position="right")+
geom_tiplab(aes(label=paste0(Family, " ", Genus, " ", Species), parse = T))+
geom_text2(aes(subset=!isTip, label=node), hjust=-.3, size = 4)
viewClade(p1,node = 211)
SV_table<-read_qza("Output/SVtable.qza")$data
SV_sequences <- read_qza("Output/SVsequences.qza")$data
SV_taxonomy <- read_tsv("Output/SV_taxonomy_Dada2.txt") ## or we can use fread
SVtree_denovo <- read_qza("Output/SVtree_denovo.qza")$data
metadata<-read_excel("MGHEP_metadata.xlsx")
SVtree_inserted <- read_qza("Output/SVtree_inserted.qza")$data
knitr::opts_chunk$set(echo = TRUE, message=FALSE, warning=FALSE, tidy=FALSE, cache=FALSE)
#setwd("/Volumes/turnbaughlab/qb3share/janice/MGEP_16S")
getwd()
library(qiime2R)
library(tidyverse)
library(phyloseq)
library(Biostrings)
library(vegan) ## include picante
library(ALDEx2)
library(MicrobeR)
library(readxl)
library(ggtree)
library(plotly)
library(gridExtra)
## create a project
theme_set(theme_bw())
sessionInfo()
SV_table<-read_qza("Output/SVtable.qza")$data
SV_sequences <- read_qza("Output/SVsequences.qza")$data
SV_taxonomy <- read_tsv("Output/SV_taxonomy_Dada2.txt") ## or we can use fread
SVtree_denovo <- read_qza("Output/SVtree_denovo.qza")$data
metadata<-read_excel("MGHEP_metadata.xlsx")
SVtree_inserted <- read_qza("Output/SVtree_inserted.qza")$data
devtools::install_github("jbisanz/qiime2R")
library(qiime2R)
SV_table<-read_qza("Output/SVtable.qza")$data
SV_sequences <- read_qza("Output/SVsequences.qza")$data
SV_taxonomy <- read_tsv("Output/SV_taxonomy_Dada2.txt") ## or we can use fread
SVtree_denovo <- read_qza("Output/SVtree_denovo.qza")$data
metadata<-read_excel("MGHEP_metadata.xlsx")
SVtree_inserted <- read_qza("Output/SVtree_inserted.qza")$data
metadata
metadata %>% filter(!Sample_ID %in% colnames(SV_table))
metadata %>% filter(Sample_ID %in% colnames(SV_table)) #only show missing
metadata
# Chunk 1
knitr::opts_chunk$set(echo = TRUE)
# Chunk 2
## uncomment and run installation if packages have not been installed
#install.packages(c("tidyverse", "readxl"))
setwd("~/Documents/IntroToR/")
library(tidyverse)
library(randomNames)
library(readxl)
# Chunk 4
data <- read.csv("20200912_dispensingRecords.csv")
# View data
View(data)
head(data)
# Chunk 5
?class
data %>% class
# Chunk 6
data %>% pull(medications) %>% class
data %>% pull(quantity) %>% class
data %>% pull(Date) %>% class
# Chunk 7
data %>% filter(Date > "2020-09-01")
# Chunk 8
data %>% filter(as.Date(Date) > as.Date("2020-09-01")) %>% head()
data
data %>% filter(medications == "Metformin_500mg" | medications == "Metformin_850mg")
data %>% filter(medications == "Metformin_500mg" | medications == "Metformin_850mg")
data %>% filter(medications == "Metformin_500mg" | medications == "Metformin_850mg") %>%
pull(NRIC) %>% unique %>% length
# Chunk 1
knitr::opts_chunk$set(echo = TRUE)
# Chunk 2
## uncomment and run installation if packages have not been installed
#install.packages(c("tidyverse", "readxl"))
setwd("~/Documents/IntroToR/")
library(tidyverse)
library(randomNames)
library(readxl)
# Chunk 4
data <- read.csv("20200912_dispensingRecords.csv")
# View data
View(data)
head(data)
# Chunk 5
?class
data %>% class
# Chunk 6
data %>% pull(medications) %>% class
data %>% pull(quantity) %>% class
data %>% pull(Date) %>% class
# Chunk 7
data %>% filter(Date > "2020-09-01")
# Chunk 8
data %>% filter(as.Date(Date) > as.Date("2020-09-01")) %>% head()
# Chunk 9
Aug.data <- data %>% separate(Date, into = c("YY", "MM", "DD"), by = "-") %>%
mutate_at(c("YY", "MM", "DD"), as.numeric) %>%
filter(MM == 08) %>%
group_by(medications, item_code) %>%
summarize(total_given = sum(quantity))
# Chunk 11
par_level <- readRDS("par_level.RDS")
Aug.data %>% left_join(par_level, by = c("medications", "item_code")) %>%
mutate(current = max_par - total_given,
top_up = if_else(max_par - total_given < min_par, "Yes", "No"))
Aug.data %>% left_join(par_level, by = c("medications", "item_code")) %>%
mutate(current = max_par - total_given,
top_up = if_else(max_par - total_given < min_par, "Yes", "No"))
Aug.data <- data %>% separate(Date, into = c("YY", "MM", "DD"), by = "-") %>%
mutate_at(c("YY", "MM", "DD"), as.numeric) %>%
filter(MM == 08) %>%
group_by(medications, item_code) %>%
summarize(total_given = sum(quantity))
Aug.data <- data %>% separate(Date, into = c("YY", "MM", "DD"), sep = "-") %>%
mutate_at(c("YY", "MM", "DD"), as.numeric) %>%
filter(MM == 08) %>%
group_by(medications, item_code) %>%
summarize(total_given = sum(quantity))
par_level <- readRDS("par_level.RDS")
Aug.data %>% left_join(par_level, by = c("medications", "item_code")) %>%
mutate(current = max_par - total_given,
top_up = if_else(max_par - total_given < min_par, "Yes", "No"))
data %>% filter(medications == "Metformin_500mg" | medications == "Metformin_850mg") %>%
pull(NRIC) %>% unique %>% length
data %>% filter(grepl("Metformin", medications, ignore.case = T))
data %>% filter(grepl("Metformin", medications, ignore.case = T)) %>%
pull(NRIC) %>% unique %>% length
tmp <- data %>% filter(medications  %in% c("Amlodipine_5mg", "Metformin_500mg")) %>%
group_by(medications, Date) %>%
summarize(total_qty = sum(quantity))
tt.results <- t.test(tmp %>%  filter(medications == "Amlodipine_5mg") %>% pull(total_qty),
tmp %>% filter(medications == "Metformin_500mg")%>% pull(total_qty))
data %>% filter(medications  %in% c("Amlodipine_5mg", "Metformin_500mg")) %>%
group_by(medications, Date) %>%
summarize(total_qty = sum(quantity)) %>%
ggplot(aes(x = medications, y = total_qty, col = medications))+
geom_boxplot(aes(fill = medications, alpha = 0.2))+
geom_jitter()+
theme_bw()+
geom_text(aes(x = 2, y = 400,
label = paste0("pvalue = ", tt.results$p.value)))+
theme(legend.position = "none")
print("hello world")
getwd()
data <- read.csv("20200912_dispensingRecords.csv")
# View data
View(data)
head(data)
data
hihihi
?class
?read.csv
?class
data %>% class ## tidyverse
class(data) ## baseR/normal way
library(tidyverse)
library(readxl)
data %>% pull(medications)
data %>% pull(medications) %>% class
class(data$medications)
data %>% pull(quantity) %>% class
data %>% pull(Date) %>% class
?filter
data %>% filter(Date > "2020-09-01")
data %>% filter(Date > as.factor("2020-09-01"))
data %>% filter(as.Date(Date) > as.Date("2020-09-01"))
data %>% filter(as.Date(Date) == as.Date("2020-09-01"))
data %>% filter(as.Date(Date) == as.Date("2020-09-01")) %>% head()
as.factor("2020-09-01")
data %>% filter(Date == as.factor("2020-09-01"))
data %>% filter(Date == "2020-09-01")
data %>% filter(Date > as.factor("2020-09-01"))
data %>% separate(Date, into = c("YY", "MM", "DD"), sep = "-")
data %>% separate(Date, into = c("YY", "MM", "DD"), sep = "-") %>%
mutate_at(c("YY", "MM", "DD"), as.numeric)
data %>% separate(Date, into = c("YY", "MM", "DD"), sep = "-") %>%
mutate_at(c("YY", "MM", "DD"), as.numeric) %>%
filter(MM == 08)
Aug.data <- data %>% separate(Date, into = c("YY", "MM", "DD"), sep = "-") %>%
mutate_at(c("YY", "MM", "DD"), as.numeric) %>%
filter(MM == 08) %>%
group_by(medications, item_code) %>%
summarize(total_given = sum(quantity))
Aug.data
par_level <- readRDS("par_level.RDS")
par_level
tmp <- data %>% filter(medications  %in% c("Amlodipine_5mg", "Metformin_500mg")) %>%
group_by(medications, Date) %>%
summarize(total_qty = sum(quantity))
## How to run a t.test?
?t.test
tt.results <- t.test(tmp %>%  filter(medications == "Amlodipine_5mg") %>% pull(total_qty),
tmp %>% filter(medications == "Metformin_500mg")%>% pull(total_qty))
## How to get results from a t.test?
tt.results$p.value
data %>% filter(medications  %in% c("Amlodipine_5mg", "Metformin_500mg")) %>%
group_by(medications, Date) %>%
summarize(total_qty = sum(quantity)) %>%
ggplot(aes(x = medications, y = total_qty, col = medications))+
geom_boxplot(aes(fill = medications, alpha = 0.2))+
geom_jitter()+
theme_bw()+
geom_text(aes(x = 2, y = 400,
label = paste0("pvalue = ", tt.results$p.value)))+
theme(legend.position = "none")
